environment = "local"
environment = ${?ENVIRONMENT}

parallelism = 1
parallelism = ${?PARALLELISM}

jwt {
  key = "testkey"
  key = ${?JWT_SECRET_KEY}
}

gateway {
  host = "gateway.gateway"
  host = ${?GATEWAY_INTERNAL_HOST}
}

s3 {
  endpoint = ${?S3_ENDPOINT}
  path_style_access = false
  path_style_access = ${?S3_PATH_STYLE_ACCESS}
  storage_bucket = ${?S3_STORAGE_BUCKET}
  dataset_asset_bucket = ${?S3_DATASET_ASSET_BUCKET}
}

timeseries {
  bucket = ${?TIME_SERIES_BUCKET}
}

data {
  postgres {
    database = "postgres"
    database = ${?DATA_POSTGRES_DATABASE}
    host = "postgres"
    host = ${?DATA_POSTGRES_HOST}
    password = "password"
    password = ${?DATA_POSTGRES_PASSWORD}
    port = 5432
    port = ${?DATA_POSTGRES_PORT}
    user = "postgres"
    user = ${?DATA_POSTGRES_USER}
  }
}

postgres {
  # main pennsieve database
  host = "postgres"
  host = ${?PENNSIEVE_POSTGRES_HOST}
  port = "5432"
  port = ${?PENNSIEVE_POSTGRES_PORT}
  database = "postgres"
  database = ${?PENNSIEVE_POSTGRES_DATABASE}
  user = "postgres"
  user = ${?PENNSIEVE_POSTGRES_USER}
  password = "password"
  password = ${?PENNSIEVE_POSTGRES_PASSWORD}

  # For tabular/timeseries DB
  # Format specifically to satisfy scalikejdbc
  db {
    default {
      url = "jdbc:postgresql://"${data.postgres.host}":"${data.postgres.port}"/"${data.postgres.database}"?ssl=true&sslmode=verify-ca"
      user = ${data.postgres.user}
      password = ${data.postgres.password}
    }
  }
}

sqs {
  host = "http://localhost:4576"
  region = "us-east-1"
  queue = ${?SQS_QUEUE}
  queue_v2 = ${?SQS_QUEUE_V2}
}

pennsieve {
  changelog {
    sns_topic = "events-topic"
    sns_topic = ${?INTEGRATION_EVENTS_SNS_TOPIC}
  }
 }
